- hosts: all
  become: yes
  vars_files:
    - ../conf/config.yml

  tasks:

    ################
    ### Config files

    - name: Copy config files
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: /mnt/conf
        mode: preserve
      loop:
        - ../conf/cloud/files
        - ../conf/cloud/web

    ############
    ### Git user

    - name: Create 'git' user
      ansible.builtin.user:
        name: git
        generate_ssh_key: yes
        ssh_key_bits: 2048
        shell: /usr/bin/git-shell
        create_home: true
        home: /mnt/git
        skeleton: "false"
      register: git_user

    - name: Disable 'git' password
      ansible.builtin.command: passwd -d git

    - name: Copy git shell commands
      ansible.builtin.copy:
        src: ../conf/cloud/git-shell-commands
        dest: /mnt/git
        owner: git
        group: git
        mode: preserve

    ############
    ### Firewall

    - name: "Configure firewall: allow http"
      community.general.ufw:
        rule: allow
        port: http

    - name: "Configure firewall: allow https"
      community.general.ufw:
        rule: allow
        port: https

    - name: "Configure firewall: allow syncthing (22000)"
      community.general.ufw:
        rule: allow
        port: "22000"


    #######################
    ### Docker services ###
    #######################

    #######
    ### Web

    - name: Start Web builder
      community.docker.docker_container:
        name: web-builder
        image: jekyll/jekyll
        restart_policy: unless-stopped
        command: jekyll build --watch --force_polling
        env:
          JEKYLL_ENV: production
        volumes:
          - "{{ web_files }}:/srv/jekyll"
          - /mnt/web/html:/srv/jekyll/_site
          - /mnt/web/jekyll-cache:/srv/jekyll/.jekyll-cache

    - name: Start Web proxy
      community.docker.docker_container:
        name: web-proxy
        image: nginx:alpine
        restart_policy: unless-stopped
        healthcheck:
          test: curl -fsSL localhost > /dev/null
        exposed_ports:
          - "80"
        volumes:
          - /mnt/conf/web/nginx.conf:/etc/nginx/conf.d/default.conf:ro
          - /mnt/web/html:/usr/share/nginx/html:ro
        labels:
          traefik.enable: "true"
          traefik.http.routers.web.rule: Host(`{{ hostname }}`)

    #######
    ### Git

    - name: Start Git WebUI
      community.docker.docker_container:
        name: git
        image: jonashaag/klaus
        restart_policy: unless-stopped
        command: >-
          uwsgi --plugin python --http11-socket 0.0.0.0:80
          -w klaus.contrib.wsgi_autoreload
        user: "{{ git_user.uid }}:{{ git_user.uid }}"
        exposed_ports:
          - "80"
        env:
          KLAUS_REPOS: /repos
          KLAUS_USE_SMARTHTTP: "1"
          KLAUS_SITE_NAME: "{{ git_sitename }}"
        volumes:
          - "/mnt/git:/repos:ro"
        labels:
          traefik.enable: "true"
          traefik.http.routers.git.rule: Host(`git.{{ hostname }}`)

    ############
    ## Bookmarks

    - name: Start Links store
      community.docker.docker_container:
        image: sissbruecker/linkding
        name: links
        restart_policy: unless-stopped
        exposed_ports:
          - "80"
        # https://github.com/sissbruecker/linkding/issues/439
        ulimits:
          - nofile:1048576:1048576
        env:
          LD_SUPERUSER_NAME: linkding
          LD_SUPERUSER_PASSWORD: "{{ links_password }}"
          LD_SERVER_PORT: "80"
          LD_CSRF_TRUSTED_ORIGINS: https://links.{{ hostname }}
          LD_DISABLE_URL_VALIDATION: "True"
        volumes:
          - /mnt/links:/etc/linkding/data
        labels:
          traefik.enable: "true"
          traefik.http.routers.links.rule: Host(`links.{{ hostname }}`)

    ##################
    ### DAV (Cal/Card)

    - name: Start (Cal/Card)DAV server
      community.docker.docker_container:
        name: dav
        image: ckulka/baikal:nginx
        restart_policy: unless-stopped
        healthcheck:
          test: curl -fsSL localhost | grep -q '<h1>Ba√Økal is running alright.</h1>'
        exposed_ports:
          - "80"
        volumes:
          - /mnt/dav/config:/var/www/baikal/config
          - /mnt/dav/Specific:/var/www/baikal/Specific
        labels:
          traefik.enable: "true"
          traefik.http.routers.dav.rule: Host(`dav.{{ hostname }}`)

    #########
    ### Files

    - name: Prepare Files database
      ansible.builtin.shell: |
        mkdir -p /mnt/files
        touch /mnt/files/filebrowser.db

    - name: Start Files WebUI
      community.docker.docker_container:
        name: files
        image: filebrowser/filebrowser
        restart_policy: unless-stopped
        exposed_ports:
          - "80"
        volumes:
          - /mnt/conf/files/config.json:/.filebrowser.json
          - /mnt/data:/srv
          - /mnt/files/filebrowser.db:/database.db
        labels:
          traefik.enable: "true"
          traefik.http.routers.files.rule: Host(`files.{{ hostname }}`)

    ########
    ### Sync

    - name: Setup Sync directory
      ansible.builtin.file:
        path: /mnt/data
        owner: "{{ main_user }}"
        group: "{{ main_user }}"
        state: directory
        mode: '0755'

    - name: Start Sync service
      community.docker.docker_container:
        name: sync
        image: syncthing/syncthing
        restart_policy: unless-stopped
        exposed_ports:
          - "22000:22000/udp"
          - "22000:22000/tcp"
        published_ports:
          - "127.0.0.1:8384:8384"
        env:
          TZ: Europe/Paris
        volumes:
          - /mnt/sync:/var/syncthing
          - /mnt/data:/data
