- hosts: all
  become: yes
  vars_files:
    - ../conf/config.yml

  vars:
    should_do_long_tasks: true

  tasks:
    - name: Refresh pacman keys
      ansible.builtin.shell: |
        rm -rf /etc/pacman.d/gnupg
        pacman-key --init
        pacman-key --populate archlinux
        pacman -Sy --noconfirm archlinux-keyring && pacman -Su --noconfirm
      when: should_do_long_tasks

    - name: Update system
      community.general.pacman:
        update_cache: yes
        upgrade: yes
      when: should_do_long_tasks

    - name: Install dependencies
      ansible.builtin.package:
        name:
          - borg
          - borgmatic
          - docker
          - git
          - python
          - python-docker
          - sudo
          - ufw
        state: present

    - name: Set hostname
      ansible.builtin.hostname:
        name: "{{ hostname }}"

    - name: Reboot
      ansible.builtin.reboot:
      when: should_do_long_tasks

    - name: Enable Docker service
      ansible.builtin.systemd:
        name: docker
        enabled: yes

    - name: Update current Docker images
      ansible.builtin.shell: |
        docker rm -f $(docker ps -a -q) || true
        docker images | grep -v '^REPO' | sed 's/ \+/:/g' | cut -d: -f1,2 | xargs -L1 -r docker pull
        docker image prune -f
      when: should_do_long_tasks

    - name: Enable UFW service
      ansible.builtin.systemd:
        name: ufw
        enabled: yes

    - name: "Configure firewall: default deny"
      community.general.ufw:
        state: enabled
        policy: deny

    - name: "Configure firewall: restrict ssh"
      community.general.ufw:
        rule: limit
        port: ssh
        proto: tcp

    - name: Create '{{ main_user }}' user
      ansible.builtin.user:
        name: "{{ main_user }}"
        generate_ssh_key: yes
        ssh_key_bits: 2048
        groups: wheel,users,docker

    - name: Deploy Borg on server
      ansible.builtin.include_tasks: backup-server.yml
      when: hostname == backup_server

    - name: Deploy Borg on client
      ansible.builtin.include_tasks: backup-client.yml

    - name: "Create Docker network: public"
      community.docker.docker_network:
        name: public

    - name: "Create Docker network: private"
      community.docker.docker_network:
        name: private
        ipam_config:
          - subnet: 172.20.0.0/16
            gateway: 172.20.0.1
